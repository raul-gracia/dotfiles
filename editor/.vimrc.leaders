" Redraw vim interface
nmap <leader>rd :redraw!<CR>

" format the entire file
nnoremap <leader>fef :normal! gg=G``<CR>

" upper/lower word
nmap <leader>u mQviwU`Q
nmap <leader>l mQviwu`Q

" upper/lower first char of word
nmap <leader>U mQgewvU`Q
nmap <leader>L mQgewvu`Q

" Create the directory containing the file in the buffer
nmap <silent> <leader>md :!mkdir -p %:p:h<CR>

" Toggle hlsearch with <leader>hs
nmap <leader>hs :set hlsearch! hlsearch?<CR>

" Fugitive Mappings
nmap <leader>gb :Gblame<CR>
nmap <leader>gs :Gstatus<CR>
nmap <leader>gd :Gdiff<CR>
nmap <leader>gl :Glog<CR>
nmap <leader>gc :Gcommit -v<CR>
nmap <leader>gp :Git push<CR>
nmap <leader>gaa :Git add --all<CR>

" Autoload config after saving file
"if has("autocmd")
  "autocmd bufwritepost .vimrc nested source ~/.vimrc
  "autocmd bufwritepost .vimrc.leaders nested source ~/.vimrc
  "autocmd bufwritepost .vimrc.bundles nested source ~/.vimrc
  "autocmd bufwritepost vimrc nested source ~/.vimrc
  "autocmd bufwritepost vimrc.leaders nested source ~/.vimrc
  "autocmd bufwritepost vimrc.bundles nested source ~/.vimrc
"endif

nmap <leader>vr :source $MYVIMRC<CR>
nmap <leader>ve :tabedit ~/.vimrc<CR>
nmap <leader>vl :tabedit ~/.vimrc.leaders<CR>
nmap <leader>vb :tabedit ~/.vimrc.bundles<CR>
nmap <leader>jj :%!python -m json.tool<CR>

" Go related
au FileType go nmap <Leader>s <Plug>(go-implements)
au FileType go nmap <Leader>i <Plug>(go-info)
au FileType go nmap <Leader>gd <Plug>(go-doc)
au FileType go nmap <Leader>gv <Plug>(go-doc-vertical)
au FileType go nmap <Leader>gb <Plug>(go-doc-browser)
au FileType go nmap <leader>r <Plug>(go-run)
au FileType go nmap <leader>b <Plug>(go-build)
au FileType go nmap <leader>t <Plug>(go-test)
au FileType go nmap <leader>c <Plug>(go-coverage)
au FileType go nmap <Leader>ds <Plug>(go-def-split)
au FileType go nmap <Leader>dv <Plug>(go-def-vertical)
au FileType go nmap <Leader>dt <Plug>(go-def-tab)
au FileType go nmap <Leader>e <Plug>(go-rename)
au FileType go nmap <Leader>cg <Plug>(go-callgraph)
